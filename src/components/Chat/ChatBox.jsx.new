// filepath: d:\chat_bot_EPF_Projet\src\components\Chat\ChatBox.jsx
import React, { useEffect, useRef, useState } from 'react';
import { Trash2, FileText } from "lucide-react";
import Message from './Message';
import DocumentGeneratorDialog from './DocumentGeneratorDialog';

export default function ChatBox({ messages, isLoading, conversationId, onDeleteConversation }) {
  const messagesEndRef = useRef(null);
  const showWelcomeMessage = !messages.length && !isLoading;
  const [documentDialogOpen, setDocumentDialogOpen] = useState(false);
  
  // Trouver le titre de la conversation à partir des messages
  const conversationTitle = messages.length > 0 
    ? messages[0].text.substring(0, 50) + (messages[0].text.length > 50 ? '...' : '')
    : `Conversation #${conversationId?.substring(0, 8) || ''}`;

  // Effet pour faire défiler vers le bas lorsque de nouveaux messages arrivent
  useEffect(() => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  }, [messages]);
  
  const handleDeleteConversation = async () => {
    if (window.confirm("Êtes-vous sûr de vouloir supprimer cette conversation ?")) {
      try {
        await onDeleteConversation(conversationId);
      } catch (error) {
        console.error("Erreur lors de la suppression:", error);
        alert("Une erreur est survenue lors de la suppression");
      }
    }
  };
  
  return (
    <div className="flex-1 overflow-y-auto p-4 relative scrollbar-thin scrollbar-thumb-sidebar-accent scrollbar-track-transparent">
      {/* Actions flottantes en haut à droite si une conversation est active */}
      {conversationId && messages.length > 0 && (
        <div className="absolute top-2 right-2 flex gap-2">
          <button
            onClick={() => setDocumentDialogOpen(true)}
            className="p-2 bg-white dark:bg-gray-800 rounded-full shadow hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors"
            title="Générer un document"
          >
            <FileText className="h-4 w-4 text-gray-600 dark:text-gray-300" />
          </button>
          <button
            onClick={handleDeleteConversation}
            className="p-2 bg-white dark:bg-gray-800 rounded-full shadow hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors"
            title="Supprimer la conversation"
          >
            <Trash2 className="h-4 w-4 text-gray-600 dark:text-gray-300" />
          </button>
        </div>
      )}
      
      {showWelcomeMessage && (
        <div className="flex flex-col items-center justify-center h-full p-10 text-center">
          <div className="w-16 h-16 bg-[#16698C] rounded-full flex items-center justify-center mb-4">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="text-white"><path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path></svg>
          </div>
          <h2 className="text-xl font-semibold mb-2">Bienvenue sur JuridicA</h2>
          <p className="text-gray-500 dark:text-gray-400 mb-6 max-w-md">
            Je suis votre assistant juridique spécialisé pour les Junior-Entreprises. 
            Comment puis-je vous aider aujourd'hui ?
          </p>
          
          <div className="flex items-center gap-4 text-sm text-gray-500 dark:text-gray-400 mt-4">
            <div className="flex items-center gap-1">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                <path d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"></path>
                <path d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"></path>
              </svg>
              <span>Sources activées</span>
            </div>
            <div className="flex items-center gap-1">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                <path d="M21.44 11.05l-9.19 9.19a6 6 0 0 1-8.49-8.49l9.19-9.19a4 4 0 0 1 5.66 5.66l-9.2 9.19a2 2 0 0 1-2.83-2.83l8.49-8.48"></path>
              </svg>
              <span>Joindre des documents</span>
            </div>
          </div>
        </div>
      )}
        {messages.map((msg) => (
        <Message 
          key={msg.id} 
          text={msg.text} 
          sender={msg.sender} 
          sources={msg.sources} 
          citations={msg.citations} 
          generatedDocument={msg.generatedDocument}
        />
      ))}
      
      {isLoading && (
        <div className="flex justify-start mb-2">
          <div className="p-3 rounded-lg bg-background text-flex-1">
            <div className="flex space-x-2">
              <div className="w-2 h-2 rounded-full bg-gray-400 animate-bounce"></div>
              <div className="w-2 h-2 rounded-full bg-gray-400 animate-bounce" style={{ animationDelay: "0.2s" }}></div>
              <div className="w-2 h-2 rounded-full bg-gray-400 animate-bounce" style={{ animationDelay: "0.4s" }}></div>
            </div>
          </div>
        </div>
      )}
      
      {/* Dialogue de génération de document */}
      <DocumentGeneratorDialog
        open={documentDialogOpen}
        onClose={() => setDocumentDialogOpen(false)}
        conversationId={conversationId}
        conversationTitle={conversationTitle}
      />
      
      {/* Élément de référence pour le défilement automatique */}
      <div ref={messagesEndRef} />
    </div>
  );
}
